{"version":3,"sources":["style.css","../sass/components/_boxed-side.scss","../sass/utility/_bem.scss","../sass/components/_card.scss","../sass/utility/_elevation.scss","../sass/components/_cta.scss"],"names":[],"mappings":"AAAA,gBAAgB;ACKd;EAEE,aAAA;EACA,kBAAA;EACA,sCACE;EAEF,2BAAA;EACA,iBAAA;EACA,sBAAA;ADNJ;ACQI;EACE,mBAAA;EACA,8BAAA;UAAA,2BAAA;EACA,6BAAA;UAAA,yBAAA;ADNN;ACSI;EACE,gBAAA;EACA,mBAAA;EACA,4BAAA;UAAA,wBAAA;ADPN;ACUI;EAvBF;IAwBI,iBAAA;EDPJ;AACF;ACSI;EA3BF;IA4BI,qBAAA;IACA,kBAAA;IACA,oCAAA;IACA,qCAAA;IACA,mBAAA;EDNJ;ECQI;IACE,oCAAA;EDNN;AACF;AE/BE;EDyCI,kBAAA;EACA,kBAAA;EACA,oBAAA;EACA,aAAA;EACA,2BAAA;EACA,wBAAA;ADPN;AEvCE;EDkDI,gBAAA;EACA,iBAAA;ADRN;AE3CE;EDuDI,gBAAA;ADTN;ACWM;EACE,YAAA;EACA,WAAA;ADTR;AElDE;EDgEI,cAAA;EACA,oBAAA;ADXN;;AGvDE;ECkGA,iIAAA;UAAA,yHAAA;EDhGE,8DAAA;EAAA,sDAAA;EAAA,8CAAA;EAAA,0FAAA;AH0DJ;AGxDI;EC8FF,kIAAA;UAAA,0HAAA;ED5FI,eAAA;EACA,wDAAA;EAAA,gDAAA;EAAA,wCAAA;EAAA,8EAAA;AH0DN;AEhEE;ECUI,uBAAA;AHyDN;AGvDM;EDZJ;ICaM,yBAAA;EH0DN;AACF;AExEE;ECkBI,sBAAA;AHyDN;AE3EE;ECsBI,0BAAA;AHwDN;AGtDM;EDxBJ;ICyBM,sBAAA;EHyDN;AACF;;AKpFE;EAEE,oBAAA;EAAA,oBAAA;EAAA,aAAA;EACA,8BAAA;MAAA,2BAAA;UAAA,6BAAA;EACA,iBAAA;EACA,iBAAA;EACA,kBAAA;EACA,iBAAA;EACA,WAAA;ALsFJ;AKpFI;EAVF;IAWI,iBAAA;ELuFJ;AACF;AKrFI;EAdF;IAeI,mBAAA;QAAA,eAAA;IACA,iBAAA;ELwFJ;AACF;AExGE;EGmBI,cAAA;EACA,iBAAA;EACA,qBAAA;EACA,0BAAA;EAAA,uBAAA;EAAA,kBAAA;ALwFN;AKtFM;EHxBJ;IGyBM,uBAAA;ELyFN;AACF;AEnHE;EG8BI,2BAAA;MAAA,kBAAA;EACA,oBAAA;EACA,UAAA;ALwFN;AKtFM;EHlCJ;IGmCM,4BAAA;QAAA,iBAAA;YAAA,QAAA;IACA,kBAAA;IACA,kBAAA;IACA,WAAA;ELyFN;AACF;AEhIE;EG2CI,oBAAA;KAAA,iBAAA;EACA,YAAA;EACA,WAAA;ALwFN;AKtFM;EH/CJ;IGgDM,4BAAA;QAAA,iBAAA;YAAA,QAAA;IACA,WAAA;IACA,YAAA;ELyFN;AACF;AE5IE;EGuDI,YAAA;EACA,gBAAA;EACA,UAAA;ALwFN;AKtFM;EH3DJ;IG4DM,4BAAA;QAAA,iBAAA;YAAA,QAAA;IACA,WAAA;ELyFN;AACF;AKrFM;EACE,eAAA;EACA,gBAAA;ALuFR","file":"../style.css","sourcesContent":["@charset \"UTF-8\";\n.boxed-side {\n  display: grid;\n  grid-row-gap: 2rem;\n  grid-template-areas: \"image\" \"content\";\n  grid-template-columns: auto;\n  max-width: 1200px;\n  margin: 1rem 1rem 2rem;\n}\n.boxed-side h3 {\n  margin-bottom: 0rem;\n  margin-block-start: 0.25rem;\n  margin-block-end: 0.75rem;\n}\n.boxed-side h4 {\n  margin-top: 0rem;\n  line-height: normal;\n  margin-block-end: 0.5rem;\n}\n@media screen and (min-width: 1250px) {\n  .boxed-side {\n    margin: 1rem auto;\n  }\n}\n@media screen and (min-width: 680px) {\n  .boxed-side {\n    grid-column-gap: 4rem;\n    grid-row-gap: 6rem;\n    grid-template-areas: \"content image\";\n    grid-template-columns: repeat(2, 1fr);\n    margin-bottom: 5rem;\n  }\n  .boxed-side:nth-child(even) {\n    grid-template-areas: \"image content\";\n  }\n}\n.boxed-side__content {\n  align-self: center;\n  grid-area: content;\n  justify-self: center;\n  display: grid;\n  grid-template-columns: auto;\n  grid-template-rows: auto;\n}\n.boxed-side__header {\n  font-weight: 400;\n  line-height: 10px;\n}\n.boxed-side__image {\n  grid-area: image;\n}\n.boxed-side__image img {\n  height: auto;\n  width: 100%;\n}\n.boxed-side__link {\n  display: block;\n  margin: 0.75rem 0rem;\n}\n\n.card {\n  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2), 0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12);\n  transition: box-shadow 333ms ease-in-out 150ms;\n}\n.card:hover {\n  box-shadow: 0px 3px 5px -1px rgba(0, 0, 0, 0.2), 0px 5px 8px 0px rgba(0, 0, 0, 0.14), 0px 1px 14px 0px rgba(0, 0, 0, 0.12);\n  cursor: pointer;\n  transition: box-shadow 333ms ease-in-out;\n}\n.card__container {\n  padding: 1rem 1rem 2rem;\n}\n@media screen and (max-width: 768px) {\n  .card__container {\n    padding: 1rem 0.5rem 2rem;\n  }\n}\n.card__header {\n  margin: 2rem 0rem 0rem;\n}\n.card__subHeader {\n  margin: 0.5rem 0rem 1.5rem;\n}\n@media screen and (max-width: 768px) {\n  .card__subHeader {\n    margin: 0rem 0rem 2rem;\n  }\n}\n\n.cta {\n  display: flex;\n  justify-content: space-evenly;\n  max-width: 1200px;\n  margin: 6rem auto;\n  position: relative;\n  min-height: 470px;\n  width: 100%;\n}\n@media screen and (max-width: 1250px) {\n  .cta {\n    margin: 2rem 1rem;\n  }\n}\n@media screen and (max-width: 768px) {\n  .cta {\n    flex-wrap: wrap;\n    min-height: 250px;\n  }\n}\n.cta__button {\n  display: block;\n  margin: 1rem 0rem;\n  text-decoration: none;\n  width: fit-content;\n}\n@media screen and (max-width: 768px) {\n  .cta__button {\n    margin: 1rem â€‹auto 2rem;\n  }\n}\n.cta__content {\n  align-self: center;\n  padding: 1rem 1.5rem;\n  width: 50%;\n}\n@media screen and (max-width: 768px) {\n  .cta__content {\n    order: 2;\n    padding: 1rem 2rem;\n    place-self: center;\n    width: 100%;\n  }\n}\n.cta__image {\n  object-fit: cover;\n  height: 100%;\n  width: 100%;\n}\n@media screen and (max-width: 768px) {\n  .cta__image {\n    order: 1;\n    width: 100%;\n    height: auto;\n  }\n}\n.cta__media {\n  height: auto;\n  overflow: hidden;\n  width: 50%;\n}\n@media screen and (max-width: 768px) {\n  .cta__media {\n    order: 1;\n    width: 100%;\n  }\n}\n.cta__text p {\n  font-size: 19px;\n  font-weight: 600;\n}","// @forward '../utility';\n\n@use \"../utility\" as lv;\n\n@mixin boxed-side() {\n  .boxed-side {\n    @content;\n    display: grid;\n    grid-row-gap: 2rem;\n    grid-template-areas:\n      \"image\"\n      \"content\";\n    grid-template-columns: auto;\n    max-width: 1200px;\n    margin: 1rem 1rem 2rem;\n\n    h3 {\n      margin-bottom: 0rem;\n      margin-block-start: 0.25rem;\n      margin-block-end: 0.75rem;\n    }\n\n    h4 {\n      margin-top: 0rem;\n      line-height: normal;\n      margin-block-end: 0.5rem;\n    }\n\n    @media screen and (min-width: 1250px) {\n      margin: 1rem auto;\n    }\n\n    @media screen and (min-width: 680px) {\n      grid-column-gap: 4rem;\n      grid-row-gap: 6rem;\n      grid-template-areas: \"content image\";\n      grid-template-columns: repeat(2, 1fr);\n      margin-bottom: 5rem;\n\n      &:nth-child(even) {\n        grid-template-areas: \"image content\";\n      }\n    }\n\n    @include lv.e(\"content\") {\n      align-self: center;\n      grid-area: content;\n      justify-self: center;\n      display: grid;\n      grid-template-columns: auto;\n      grid-template-rows: auto;\n    }\n\n    @include lv.e(\"header\") {\n      font-weight: 400;\n      line-height: 10px;\n    }\n\n    @include lv.e(\"image\") {\n      grid-area: image;\n\n      img {\n        height: auto;\n        width: 100%;\n      }\n    }\n\n    @include lv.e(\"link\") {\n      display: block;\n      margin: 0.75rem 0rem;\n    }\n\n    @content;\n  }\n}\n","/// Element\n/// @access public\n/// @param {String} $name - Element's name\n@mixin element($name) {\n  &__#{$name} {\n    @content;\n  }\n}\n\n@mixin e($name) {\n  @include element($name) {\n    @content;\n  }\n}\n\n/// Modifier\n/// @access public\n/// @param {String} $name - Modifier's name\n@mixin modifier($name) {\n  &--#{$name} {\n    @content;\n  }\n}\n\n@mixin m($name) {\n  @include modifier($name) {\n    @content;\n  }\n}\n","@use '../utility' as fn;\n\n@mixin card() {\n  .card {\n    @include fn.elevation(1);\n    transition: box-shadow 333ms ease-in-out 150ms;\n    \n    &:hover {\n      @include fn.elevation(5);\n      cursor: pointer;\n      transition: box-shadow 333ms ease-in-out;\n    }\n    \n    @include fn.e('container') {\n      padding: 1rem 1rem 2rem;\n  \n      @media screen and (max-width: 768px) {\n        padding: 1rem 0.5rem 2rem;\n      }\n    }\n\n    @include fn.e('header') {\n      margin: 2rem 0rem 0rem;\n    }\n\n    @include fn.e('subHeader') {\n      margin: 0.5rem 0rem 1.5rem;\n\n      @media screen and (max-width: 768px) {\n        margin: 0rem 0rem 2rem;\n      }\n    }\n    @content;\n  }\n}\n","@use 'sass:map';\n@use 'sass:math';\n\n$baseline-color: black !default;\n$umbra-opacity: 0.2 !default;\n$penumbra-opacity: 0.14 !default;\n$ambient-opacity: 0.12 !default;\n\n$umbra-map: (\n  0: '0px 0px 0px 0px',\n  1: '0px 2px 1px -1px',\n  2: '0px 3px 1px -2px',\n  3: '0px 3px 3px -2px',\n  4: '0px 2px 4px -1px',\n  5: '0px 3px 5px -1px',\n  6: '0px 3px 5px -1px',\n  7: '0px 4px 5px -2px',\n  8: '0px 5px 5px -3px',\n  9: '0px 5px 6px -3px',\n  10: '0px 6px 6px -3px',\n  11: '0px 6px 7px -4px',\n  12: '0px 7px 8px -4px',\n  13: '0px 7px 8px -4px',\n  14: '0px 7px 9px -4px',\n  15: '0px 8px 9px -5px',\n  16: '0px 8px 10px -5px',\n  17: '0px 8px 11px -5px',\n  18: '0px 9px 11px -5px',\n  19: '0px 9px 12px -6px',\n  20: '0px 10px 13px -6px',\n  21: '0px 10px 13px -6px',\n  22: '0px 10px 14px -6px',\n  23: '0px 11px 14px -7px',\n  24: '0px 11px 15px -7px',\n) !default;\n\n\n$penumbra-map: (\n  0: '0px 0px 0px 0px',\n  1: '0px 1px 1px 0px',\n  2: '0px 2px 2px 0px',\n  3: '0px 3px 4px 0px',\n  4: '0px 4px 5px 0px',\n  5: '0px 5px 8px 0px',\n  6: '0px 6px 10px 0px',\n  7: '0px 7px 10px 1px',\n  8: '0px 8px 10px 1px',\n  9: '0px 9px 12px 1px',\n  10: '0px 10px 14px 1px',\n  11: '0px 11px 15px 1px',\n  12: '0px 12px 17px 2px',\n  13: '0px 13px 19px 2px',\n  14: '0px 14px 21px 2px',\n  15: '0px 15px 22px 2px',\n  16: '0px 16px 24px 2px',\n  17: '0px 17px 26px 2px',\n  18: '0px 18px 28px 2px',\n  19: '0px 19px 29px 2px',\n  20: '0px 20px 31px 3px',\n  21: '0px 21px 33px 3px',\n  22: '0px 22px 35px 3px',\n  23: '0px 23px 36px 3px',\n  24: '0px 24px 38px 3px',\n) !default;\n\n$ambient-map: (\n  0: '0px 0px 0px 0px',\n  1: '0px 1px 3px 0px',\n  2: '0px 1px 5px 0px',\n  3: '0px 1px 8px 0px',\n  4: '0px 1px 10px 0px',\n  5: '0px 1px 14px 0px',\n  6: '0px 1px 18px 0px',\n  7: '0px 2px 16px 1px',\n  8: '0px 3px 14px 2px',\n  9: '0px 3px 16px 2px',\n  10: '0px 4px 18px 3px',\n  11: '0px 4px 20px 3px',\n  12: '0px 5px 22px 4px',\n  13: '0px 5px 24px 4px',\n  14: '0px 5px 26px 4px',\n  15: '0px 6px 28px 5px',\n  16: '0px 6px 30px 5px',\n  17: '0px 6px 32px 5px',\n  18: '0px 7px 34px 6px',\n  19: '0px 7px 36px 6px',\n  20: '0px 8px 38px 7px',\n  21: '0px 8px 40px 7px',\n  22: '0px 8px 42px 7px',\n  23: '0px 9px 44px 8px',\n  24: '0px 9px 46px 8px',\n) !default;\n\n@mixin elevation($dp) {\n  $-box-shadow: null;\n\n  @if not map.has-key($umbra-map, $dp) {\n    @warn 'DP of #{$dp} not found.';\n    $dp: if($dp > 24, 24, $dp);\n  }\n\n  box-shadow: #{map.get($umbra-map, $dp)} rgba($baseline-color, $umbra-opacity),\n    #{map.get($penumbra-map, $dp)} rgba($baseline-color, $penumbra-opacity),\n    #{map.get($ambient-map, $dp)} rgba($baseline-color, $ambient-opacity);\n}","@use \"../utility\" as lv;\n\n@mixin cta() {\n  .cta {\n    @content;\n    display: flex;\n    justify-content: space-evenly;\n    max-width: 1200px;\n    margin: 6rem auto;\n    position: relative;\n    min-height: 470px;\n    width: 100%;\n\n    @media screen and (max-width: 1250px) {\n      margin: 2rem 1rem;\n    }\n\n    @media screen and (max-width: 768px) {\n      flex-wrap: wrap;\n      min-height: 250px;\n    }\n\n    @include lv.e(\"button\") {\n      display: block;\n      margin: 1rem 0rem;\n      text-decoration: none;\n      width: fit-content;\n\n      @media screen and (max-width: 768px) {\n        margin: 1rem â€‹auto 2rem;\n      }\n    }\n\n    @include lv.e(\"content\") {\n      align-self: center;\n      padding: 1rem 1.5rem;\n      width: 50%;\n\n      @media screen and (max-width: 768px) {\n        order: 2;\n        padding: 1rem 2rem;\n        place-self: center;\n        width: 100%;\n      }\n    }\n\n    @include lv.e(\"image\") {\n      object-fit: cover;\n      height: 100%;\n      width: 100%;\n\n      @media screen and (max-width: 768px) {\n        order: 1;\n        width: 100%;\n        height: auto;\n      }\n    }\n\n    @include lv.e(\"media\") {\n      height: auto;\n      overflow: hidden;\n      width: 50%;\n\n      @media screen and (max-width: 768px) {\n        order: 1;\n        width: 100%;\n      }\n    }\n\n    @include lv.e(\"text\") {\n      p {\n        font-size: 19px;\n        font-weight: 600;\n      }\n    }\n    @content;\n  }\n}\n"]}